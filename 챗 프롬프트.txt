- 지금부터 간단한 앱을 만드는 것을 데모로 보여주려고해. TODO 앱을 웹 앱으로 만들려고해.우선 docs 폴더 아래 요건정의를 문서화 해줘. 요건 정의를 위해서 필요한 질문들을 포함해줘 
- 윈드서프는 룰 만드는파일이 있던데 cursor은 없나? 윈드서프는 .windsurfrules 파일을 만들면 되더라고
- 스테이징된 변경사항을 커밋 해줘
- @requirements.md 참고해서 설계문서 작성을 진행해줘
- @design.md  아키텍쳐 다이어그램은 SVG를 사용해서 정확하고 상세하게 그려줘
- @design.md 문서에 기반해서 앞으로 수행해야 할 작업들을 순서대로 체크리스트로 만들어줘.
UX/UI를 제외한 코어 비지니스 로직은 TDD에 기반해서 작업해야해. 작업이 확인가능한 단위별로
커밋 포인트도 체크리스트에 표시해줘.
- 나는 좀더 간편한 UI Kit을 사용해서 프론트를 구현하고 싶어. 어떤 UI Kit 이 좋을까
- Shadcn/ui을 사용해서 UI를구현하도록 요건과 설계문서를 업데이트 해줘
- 나는 프론트엔드와 백엔드를 모노레포로 관리하고싶어. 요건과 설계문서에 반영해줘
- 이제 체크리스트에 맞춰서 작업을 시작하자
- https://github.com/PatrickJS/awesome-cursorrules/blob/main/rules/nextjs15-react19-vercelai-tailwind-cursorrules-prompt-file/.cursorrules
을 참고해서 이프로젝트의 아키텍쳐와 요구사항 @design.md, @requirements.md 을 반영한 규칙 파일을 @docs/corsorrules.md 에 만들어줘
- git hook을 이용해서 커밋시에 lint fix, build, test 가 자동으로 수행되도록 하고싶어. 실행 코드에 변경시에만 작동되어야해. 우선은 프론트에 대해서만 적용해줘.
- 나는 프론트 개발을 독립적으로 완료하고 그 다음 백엔드에 연결하는 방식으로 개발을 하고싶어.

---------- 백엔드 시작 --------
- @requirements.md 에 백엔드 요건정의를 추가해줘. 백엔드는 AWS 서버리스 아키텍쳐를 사용하여 구현해줘.
학습용 프로젝트라서 인증은 필요없지만 Cognito를 사용해서 로그인 하지않은 사용자의 권한을 구현해줘.
CI/CD는 깃헙 액션즈, lac는 TypeScript용 CDK를 사용해줘
- @requirements.md 에 맞춰 @design.md 를 수정해줘
- @design.md 에 맞춰 cheklist.md 를 수정해줘
- @design.md 파일이 너무 커졌어. 작업목적에 따라 참고하기 쉽게 docs/design 폴더를 만들고 파일을 분리해서 저장해줘
- @docs/design 안에 작업별로 설계문서가 분리되어있는데, @.cursor/rules 와 @.claude 에서도 목적에 맞게 분리된 설계문서들을 참조하도록
기존의 규칙들을 업데이트 해줘. development-principles.md 과 global-cursor-rules.mdc 는 건들지마
- 백엔드도 git hook을 사용해서 lint autofix, prettier, build, test가 수행되도록 설정해줘






--- 정리
요건정의 문서 = requirements.md
설계 문서 = design.md
체크리스트 = checklist.md

1. 요건 정의 및 필요한 질문포함 문서작성
2. 요건정의 문서로 설계문서 작성
   - 디자인은 여기서 수정
3. 설계문서를 참고하여 작업 순서대로 체크리스트 문서 작성
4. 체크리스트에 맞춰서 작업 시작

기타: 변경시마다 관련된 문서 같이 업데이트 



--- 참고 사이트
- https://github.com/PatrickJS/awesome-cursorrules 



--- claude 사용량 정보

- usage

# npm으로 전역 설치
npm install -g ccusage

# bun으로 전역 설치
bun install -g ccusage

# 실행
ccusage daily
출처: https://rudaks.tistory.com/entry/개발도구-ccusage-Claude-Code-사용량-분석-CLI-도구 [[루닥스 블로그] 연습만이 살길이다:티스토리]


- Claude-Code-Usage-Monitor

pip install claude-monitor

claude-monitor 

https://github.com/Maciek-roboblog/Claude-Code-Usage-Monitor

업그레이드 pip install --upgrade claude-monitor==3.1.0




--- 플러그인
ㅇ슈퍼클로드 
주소 : https://github.com/SuperClaude-Org/SuperClaude_Framework
유튜브 : https://www.youtube.com/watch?v=4ndOjpo2wS4&t=42s

/sc:design --persona-frontend --seq --plan 어드민페이지를 제작하고싶어 UI만 만들어줘
/sc:setup --persona-frontend --plan --seq "Playwright E2E 테스트 환경을 완전히 설정해줘"



ㅇ serena 
https://github.com/oraios/serena
확인 후 정리필요


--- mcp
ㅇ context7-mcp
주소 : https://github.com/upstash/context7
claude에 설치 : claude mcp add context7 -- npx @upstash/context7-mcp



--- 서브에이전트
ㅇ /review 
- 코드리뷰, 변경된 코드 검사, 피드백 생성
- 코드 리뷰어

--- 클로드 코드 훅스
활용= claude가 코드 수정하면 코드포매터 (prettier 등)를 자동으로 실행



--- 디자인 하기
클로드데스크탑에서 playwright mcp 설치 후
프롬프트를 아래와같이 전송

"""
https://linear.app/ 이 웹사이트의 테마를 그대로 사용해서 새로운 웹사이트를 만들고싶어. 이 웹사이트를 크롤링해서 테마 데이터를 JSON 으로 변환해줘
"""

여기서 나온 JSON 데이터를 docs 폴더에 저장
그리고 그 데이터를 프롬프트에 연결해주고 아래와 같이 프롬프트를 작성
"""
우리가 사용할 테마를 JSON 으로 입력해줄께. 이걸 기반으로 /sampleComponents 페이지를 만들고
해당 페이지에 내가 확인할 수있는 데모 컴포넌트들을 만들어줘. 이 컴포넌트들은 프로젝트 전방적으로 반복적으로 사용 할 계획이기 때문에
일반화와 중앙화에 신경써줘
"""

샘플페이지 완성
"
추가로 컴포넌트가 필요하면 caroudsel 디자인도 만들어주고 Card 컴포넌트는 이미지가 입력된 예제로 만들어줘
"
"
Navbar, Footer, Hero 도 데모 컴포넌트를 작업해줘
"
처럼 추가로 입력


테스트