{
  "name": "@vive/infrastructure",
  "version": "1.0.0",
  "description": "AWS CDK 인프라 코드",
  "private": true,
  "scripts": {
    "build": "tsc",
    "watch": "tsc -w",
    "test": "vitest",
    "cdk": "cdk",
    "deploy": "npm run deploy:dev",
    "destroy": "npm run destroy:dev",
    "synth": "npm run synth:dev",
    "diff": "npm run diff:dev",
    "bootstrap": "cdk bootstrap",
    "deploy:dev": "cdk deploy --context environment=dev",
    "deploy:test": "cdk deploy --context environment=test",
    "deploy:staging": "cdk deploy --context environment=staging",
    "deploy:prod": "cdk deploy --context environment=prod --require-approval never",
    "deploy:enhanced:dev": "DEPLOY_ENV=development ts-node scripts/deploy-environment.ts && cdk deploy hanbit-todo-development-stack",
    "deploy:enhanced:test": "DEPLOY_ENV=test ts-node scripts/deploy-environment.ts && cdk deploy hanbit-todo-test-stack",
    "deploy:enhanced:staging": "DEPLOY_ENV=staging ts-node scripts/deploy-environment.ts && cdk deploy hanbit-todo-staging-stack",
    "deploy:enhanced:prod": "DEPLOY_ENV=production ts-node scripts/deploy-environment.ts && cdk deploy hanbit-todo-production-stack --require-approval never",
    "destroy:dev": "cdk destroy --context environment=dev",
    "destroy:test": "cdk destroy --context environment=test",
    "destroy:staging": "cdk destroy --context environment=staging",
    "destroy:prod": "cdk destroy --context environment=prod",
    "destroy:enhanced:dev": "cdk destroy hanbit-todo-development-stack",
    "destroy:enhanced:test": "cdk destroy hanbit-todo-test-stack",
    "destroy:enhanced:staging": "cdk destroy hanbit-todo-staging-stack",
    "destroy:enhanced:prod": "echo 'Production destruction requires manual confirmation' && cdk destroy hanbit-todo-production-stack",
    "synth:dev": "cdk synth --context environment=dev",
    "synth:test": "cdk synth --context environment=test",
    "synth:staging": "cdk synth --context environment=staging",
    "synth:prod": "cdk synth --context environment=prod",
    "synth:all": "for env in development test staging production; do DEPLOY_ENV=$env cdk synth; done",
    "diff:dev": "cdk diff --context environment=dev",
    "diff:test": "cdk diff --context environment=test",
    "diff:staging": "cdk diff --context environment=staging",
    "diff:prod": "cdk diff --context environment=prod",
    "diff:enhanced:dev": "DEPLOY_ENV=development cdk diff hanbit-todo-development-stack",
    "diff:enhanced:test": "DEPLOY_ENV=test cdk diff hanbit-todo-test-stack",
    "diff:enhanced:staging": "DEPLOY_ENV=staging cdk diff hanbit-todo-staging-stack",
    "diff:enhanced:prod": "DEPLOY_ENV=production cdk diff hanbit-todo-production-stack",
    "list": "cdk list",
    "doctor": "cdk doctor",
    "deploy-script:dev": "./scripts/deploy.sh dev",
    "deploy-script:test": "./scripts/deploy.sh test",
    "deploy-script:staging": "./scripts/deploy.sh staging",
    "deploy-script:prod": "./scripts/deploy.sh prod",
    "deploy-script:dev-dry": "./scripts/deploy.sh dev --dry-run",
    "deploy-script:test-dry": "./scripts/deploy.sh test --dry-run",
    "deploy-script:staging-dry": "./scripts/deploy.sh staging --dry-run",
    "deploy-script:prod-dry": "./scripts/deploy.sh prod --dry-run",
    "secrets:list": "./scripts/manage-secrets.sh list",
    "secrets:validate": "./scripts/manage-secrets.sh validate",
    "secrets:rotate": "./scripts/manage-secrets.sh rotate",
    "secrets:sync-env:dev": "./scripts/manage-secrets.sh sync-env dev",
    "secrets:sync-env:test": "./scripts/manage-secrets.sh sync-env test",
    "secrets:sync-env:staging": "./scripts/manage-secrets.sh sync-env staging",
    "secrets:sync-env:prod": "./scripts/manage-secrets.sh sync-env prod"
  },
  "dependencies": {
    "aws-cdk-lib": "^2.115.0",
    "constructs": "^10.3.0",
    "source-map-support": "^0.5.21"
  },
  "devDependencies": {
    "@types/node": "^20.10.6",
    "aws-cdk": "^2.115.0",
    "typescript": "^5.3.3",
    "vitest": "^1.1.3"
  },
  "keywords": [
    "aws",
    "cdk",
    "infrastructure"
  ],
  "author": "Hanbit",
  "license": "ISC"
}
